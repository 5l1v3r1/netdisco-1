[% SET user_can_port_control = user_has_role('port_control') %]
<table id="dp-data-table" class="table table-bordered table-striped" width="100%" cellspacing="0">
</table>

<script type="text/javascript">
$(document).ready(function() {
  var freeDate = moment().subtract( [% params.age_num %], '[% params.age_unit %]' );
  var table = $('#dp-data-table').dataTable({
    "processing": true,
    "stateSave": true,
    "pageLength": [% settings.table_pagesize %],
    "language": {
      "search": 'Filter records: '
    },
    "deferRender": true,
    "order": [[ 1, "asc" ]],
    "dom": 'C<"nd_clear-both">lfrtip',
    "colVis": {
      "exclude": [ 0 ]
    },
    "stateLoadParams": function (settings, data) {
      var idx = 0;
      [% FOREACH key IN params.keys %]
        [% NEXT UNLESS key.match('^c_') AND !key.match('^c_neighbors') AND params.$key == 'on' %]
        idx = $('#dp-data-table').DataTable().column( '[% key %]:name' ).index();
        data.columns[idx].visible = true;
      [% END %]
    },
    "columns": [
      {
        "title": '',
        "name": 'icon',
        "data": "up",
        "searchable": false,
        "sortable": false,
        "className": 'nd_center-cell nd_devport-icon',
        "render": function(data, type, row, meta) {
          var cell_str = '<i class="icon-angle-up text-success"></i>';
          if (row.up_admin !== 'up') {
            cell_str = '<i class="icon-remove"></i>';
          } else if (row.up === 'up' && row.stp === 'blocking' && row.vlan_membership.length < 2) {
            cell_str = '<i class="icon-fullscreen text-info"></i>';
          } else if (row.up !== 'up'  && freeDate.isAfter(row.lastchange_stamp)) {
            cell_str = '<i class="icon-arrow-down text-success"></i>';
          } else if (row.up_admin === 'up' && (row.up !== 'up' && row.up !== 'dormant')) {
            cell_str = '<i class="icon-arrow-down text-error"></i>';
          }
          if (row.slave_of) {
            cell_str = cell_str + '<br/>';
            if (row.agg_master_up_admin != 'up') {
              cell_str = cell_str + '<small><i class="icon-group muted"></i></small>';
            } else if (row.agg_master_up === 'up') {
              cell_str = cell_str + '<small><i class="icon-group text-success"></i></small>';
            } else {
              cell_str = cell_str + '<small><i class="icon-group text-error"></i></small>';
            }
          }
          return cell_str;
        }
      }, {
        "title": 'Port',
        "name": 'c_port',
        "data": 'port',
        "type": 'portsort',
        [% IF user_can_port_control AND params.c_admin %]
        "createdCell": function (td, cellData, rowData, row, col) {
            $(td).attr('data-field', 'c_port');
            $(td).attr('data-for-device', he.encode(rowData.ip));
            $(td).attr('data-for-port', he.encode(rowData.port));
        },
        "className": 'nd_editable-cell nd_port-display',
        [% ELSE %]
        "className": 'nd_port-display',
        [% END %]
        "render": function(data, type, row, meta) {
          if (type === 'display') {
            var cell_str = '';
            [% IF user_can_port_control AND params.c_admin %]
            if (row.up_admin === 'up') {
              cell_str = cell_str + '<i class="icon-hand-down nd_hand-icon" rel="tooltip" data-placement="top" data-offset="3" data-animation="" data-title="Click to Disable"></i>';
            } else {
              cell_str = cell_str + '<i class="icon-hand-up nd_hand-icon" rel="tooltip" data-placement="top" data-offset="3" data-animation="" data-title="Click to Enable"></i>';
            }
            cell_str = cell_str + '<a class="nd_log-icon" href="[% uri_for('/report/portlog') %]?q='  + encodeURIComponent(row.ip) + '&f='  + encodeURIComponent(row.port) + '">';
            cell_str = cell_str + '<i class="icon-file-text-alt" rel="tooltip" data-placement="top" data-offset="3" data-animation="" data-title="View Port Log"></i></a>';
            [% ELSE %]
            cell_str = cell_str + '';
            [% END %]
            cell_str = cell_str + '<a class="nd_this-port-only nd_port-only-first" href="[% uri_for('/device',self_options) %]&q=[% params.q | uri %]&f=' + encodeURIComponent(row.port) + '&prefer=port">';
            if (row.is_master) {
              cell_str = cell_str + '<small><i class="icon-group muted"></i></small>&nbsp;';
            }
            cell_str = cell_str + he.encode(row.port) + '</a>';
            if (row.slave_of) {
              cell_str = cell_str + '<br/>';
              cell_str = cell_str + '<a class="nd_this-port-only" href="[% uri_for('/device', self_options) %]&q=[% params.q | uri %]&f=' + encodeURIComponent(row.slave_of) + '&prefer=port">';
              cell_str = cell_str + he.encode(row.slave_of) + '</a>';
            }
            return cell_str;
          }
          else {
            return he.encode(data || '');
          }
        }
      }, {
        "title": 'Description',
        "name": 'c_descr',
        "visible": false,
        "type": 'portsort',
        "className": 'nd_port-display',
        "data": "descr",
        "render": function(data, type, row, meta) {
          return type === 'display' ? he.encode(data || '') : data;
        }
      }, {
        "title": 'Type',
        "name": 'c_type',
        "visible": false,
        "data": "type",
        "render": function(data, type, row, meta) {
          return type === 'display' ? he.encode(data || '') : data;
        }
      }, {
        "title": 'Duplex',
        "name": 'c_duplex',
        "visible": false,
        "data": "duplex",
        "render": function(data, type, row, meta) {
         if (row.up === 'up' && row.duplex) {
            var cell_str = '';
            cell_str = cell_str + he.encode(capitalizeFirstLetter(row.duplex_admin || 'auto') );
            cell_str = cell_str + ' / ' + he.encode(capitalizeFirstLetter(row.duplex) || '');
            return cell_str;
          }
          else {
            return '';
          }
        }
      }, {
        "title": 'Last Change',
        "name": 'c_lastchange',
        "visible": false,
        "data": "lastchange_stamp",
      }, {
        "title": 'Name',
        "name": 'c_name',
        "data": "name",
        "type": 'portsort',
        [% IF user_can_port_control AND params.c_admin %]
        "createdCell": function (td, cellData, rowData, row, col) {
            $(td).attr('contenteditable', 'true');
            $(td).attr('data-field', 'c_name');
            $(td).attr('data-for-device', he.encode(rowData.ip));
            $(td).attr('data-for-port', he.encode(rowData.port));
        },
        "className": 'nd_editable-cell  nd_port-display',
        "render": function(data, type, row, meta) {
          if (type === 'display') {
            var cell_str = '<i class="icon-edit nd_edit-icon"></i>'
            cell_str = cell_str + '<div class="nd_editable-cell-content">';
            cell_str = cell_str + he.encode(data || '');
            cell_str = cell_str + '</div>';
            return cell_str;
          }
          else {
            return data;
          }
        }
        [% ELSE %]
        "render": function(data, type, row, meta) {
          return type === 'display' ? he.encode(data || '') : data;
        }  
        [% END %]
      }, {
        "title": 'Speed',
        "name": 'c_speed',
        "visible": false,
        "data": "speed",
        "render": function(data, type, row, meta) {
          return type === 'display' ? he.encode(data || '') : data;
        }
      }, {
        "title": 'Port MAC',
        "name": 'c_mac',
        "visible": false,
        "data": "mac",
        "render": function(data, type, row, meta) {
          return type === 'display' ? he.encode(data || '') : data;
        }
      }, {
        "title": 'MTU',
        "name": 'c_mtu',
        "visible": false,
        /* mtu is an integer, no need to encode */
        "data": "mtu"
      }, {
        "title": 'Native VLAN',
        "name": 'c_pvid',
        "data": "native_vlan",
        [% IF user_can_port_control AND params.c_admin %]
        "createdCell": function (td, cellData, rowData, row, col) {
            $(td).attr('contenteditable', 'true');
            $(td).attr('data-field', 'c_pvid');
            $(td).attr('data-for-device', he.encode(rowData.ip));
            $(td).attr('data-for-port', he.encode(rowData.port));
        },
        "className": 'nd_editable-cell',
        "render": function ( data, type, row, meta ) {
          if (type === 'display') {
            var cell_str = '<i class="icon-edit nd_edit-icon"></i>';
            cell_str = cell_str + '<div class="nd_editable-cell-content">';
            if (row.native_vlan) {
              /* row.native_vlan is an integer, no need to encode */
              cell_str = cell_str + row.native_vlan;
            }
            cell_str = cell_str + '</div>';
            return cell_str;
          }
          else {
            return data;
          }
        }
        [% ELSE %]
        "render": function ( data, type, row, meta ) {
          if (row.native_vlan && type === 'display') {
            return '<a class="nd_linkcell" href="[% uri_for('/search') %]?tab=vlan&q=' + encodeURIComponent(data) + '">' + data + '</a>';
          }
          else {
            return data;
          }
        }
        [% END %]
      }, {
        "title": 'VLAN Membership',
        "name": 'c_vmember',
        "visible": false,
        "type": 'natural',
        "data": null,
        "render": function ( data, type, row, meta ) {
          if (type === 'display' && row.vlan_membership) {
            var cell_str = '';
            var arr = row.vlan_membership;
            arr = arr.sort(function(a, b){return a-b});
            arr = jQuery.map( arr, function( a ) {
              return '<a href="[% uri_for('/search') %]?tab=vlan&q=' + a + '">' + a + '</a>';
            });
            if (row.vlan_membership.length > 10) {
              cell_str = cell_str + '<div class="nd_vlan-total">(';
              cell_str = cell_str + row.vlan_membership.length;
              cell_str = cell_str + ')</div><span class="nd_linkcell nd_collapse-vlans">';
              cell_str = cell_str + '<div class="nd_arrow-up-down-left icon-chevron-up icon-large"></div>Show VLANs</span>';
              cell_str = cell_str + '<div class="nd_collapsing nd_collapse-pre-hidden">' + arr.join(", ");
              cell_str = cell_str + '</div>';
              return cell_str;
            }
            else {
              return row.vlan_membership ? arr.join(", ") : "";
            }
          }
          else {
            return row.vlan_membership ? row.vlan_membership.join(", ") : "";
          }
        }
      }, {
        "title": 'PoE',
        "name": 'c_power',
        "visible": false,
        "data": "power_admin",
        "defaultContent": "",
        "className": 'nd_port-display',
        [% IF user_can_port_control AND params.c_admin %]
        "createdCell": function (td, cellData, rowData, row, col) {
            if (row.power_admin && row.power_admin === 'true') {
              $(td).attr('data-action', 'false');
            }
            else {
              $(td).attr('data-action', 'true');
            }
            $(td).attr('data-action', 'false');
            $(td).attr('data-field', 'c_power');
            $(td).attr('data-for-device', he.encode(rowData.ip));
            $(td).attr('data-for-port', he.encode(rowData.port));
        },
        [% END %]
        "render": function ( data, type, row, meta ) {
          if (type === 'display') {
            var cell_str = '';
            if (row.power_admin && row.power_admin === 'true') {
              [% IF user_can_port_control AND params.c_admin %]
              cell_str = cell_str + '<i class="icon-off nd_power-icon nd_power-on" ';
              cell_str = cell_str + 'rel="tooltip" data-placement="top" data-offset="3" ';
              cell_str = cell_str + 'data-animation="" data-title="Click to Disable"></i>';
              [% ELSE %]
              cell_str = cell_str + '<i class="icon-off nd_power-on"></i>';
              [% END %]
              cell_str = cell_str + '<span> ';
                if (row.power && row.power > 0) {
                  cell_str = cell_str + row.power + '&nbsp;mW';
                }
                else {
                  cell_str = cell_str + he.encode(row.power_status || '');
                }
              cell_str = cell_str + '<span>';
              return cell_str;
            }
            else {
              [% IF user_can_port_control AND params.c_admin %]
              cell_str = cell_str + '<i class="icon-off nd_power-icon" ';
              cell_str = cell_str + 'rel="tooltip" data-placement="top" data-offset="3" ';
              cell_str = cell_str + 'data-animation="" data-title="Click to Enable"></i>';
              [% ELSE %]
              cell_str = cell_str + '<i class="icon-off"></i>';
              [% END %]
            }
          }
          else {
            return data;
          }
        }
      }, {
        "title": 'SSID',
        "name": 'c_ssid',
        "data": "null",
        "defaultContent": "",
        "render": function ( data, type, row, meta ) {
          if (row.ssids && type === 'display') {
            var arr = row.ssids;
            arr = arr.sort();
            arr = jQuery.map( arr, function( a ) {
              return he.encode(a || '');
            });
            return row.ssids ? arr.join(", ") : "";
          }
          else {
            return row.ssids ? row.ssids.join(", ") : "";
          }
        }
      }, {
        [% IF params.c_nodes %]
        "title": 'Connected Devices and Nodes',
        "name": 'c_nodes',
        [% ELSE %]
        "title": 'Connected Devices',
        "name": 'c_neighbors',
        [% END %]
        "data": "null",
        "defaultContent": "",
        "render": function ( data, type, row, meta ) {
          var cell_str = '';
          var d_suffix = '[% settings.domain_suffix %]';
            if (row.remote_ip || row.is_uplink) {
              if (row.neighbor_alias_ip) {
                cell_str = cell_str + '<i class="icon-link';
                if (row.manual_topo) {
                  cell_str = cell_str + ' text-warning';
                }
                cell_str = cell_str + '"></i>';
                if (row.remote_type && row.remote_type.match(/ip.phone/i)) {
                  cell_str = cell_str + '<i class="icon-phone"></i>&nbsp;';
                }
                else if (row.remote_type && row.remote_type.match(/(cisco\s+AIR-[L|C]?AP|-K9W8-|^AP:\s)/)) {
                  cell_str = cell_str + '<i class="icon-signal"></i>&nbsp;';
                }
                cell_str = cell_str + '<a href="[% uri_for('/device', self_options) %]&q=';
                cell_str = cell_str + encodeURIComponent(row.neighbor_alias_ip) + '">';
                var n_dns = row.neighbor_alias_dns ? row.neighbor_alias_dns.replace(d_suffix, '') : '';
                cell_str = cell_str + he.encode(n_dns || row.neighbor_alias_ip);
                cell_str = cell_str + '</a>';
                if (row.remote_port) {
                  cell_str = cell_str + ' - '
                  cell_str = cell_str + '<a href="[% uri_for('/device', self_options) %]&q=';
                  cell_str = cell_str + encodeURIComponent(row.neighbor_alias_ip);
                  cell_str = cell_str + '&f=' + encodeURIComponent(row.remote_port);
                  cell_str = cell_str + '&prefer=port">' + he.encode(row.remote_port || '');
                  cell_str = cell_str + '</a>';
                }
                cell_str = cell_str + '<br/>';
                [% IF params.neigh_id %]
                if (row.remote_id || row.remote_type) {
                  cell_str = cell_str + '(';
                  if (row.remote_id) {
                    cell_str = cell_str + ' id: ' + he.encode(row.remote_id);
                  }
                  else if (row.remote_type) {
                    cell_str = cell_str + ' type: ' + he.encode(row.remote_type);
                  }
                  cell_str = cell_str + ' )<br/>';
                }
                [% END %]
              }
              else if (row.remote_ip) {
                cell_str = cell_str + '<i class="icon-unlink text-error"></i>&nbsp;';
                if (row.remote_type && row.remote_type.match(/ip.phone/i)) {
                  cell_str = cell_str + '<i class="icon-phone"></i>&nbsp;';
                }
                else if (row.remote_type && row.remote_type.match(/(cisco\s+AIR-[L|C]?AP|-K9W8-|^AP:\s)/)) {
                  cell_str = cell_str + '<i class="icon-signal"></i>&nbsp;';
                }
                cell_str = cell_str + '<a href="[% search_node %]&q=';
                cell_str = cell_str + encodeURIComponent(row.remote_ip) + '">';
                cell_str = cell_str + he.encode(row.remote_ip || '');
                if (row.remote_port) {
                  cell_str = cell_str + ' - ' + he.encode(row.remote_port || '');
                }
                cell_str = cell_str + '</a><br/>';
                [% IF params.neigh_id %]
                if (row.remote_id || row.remote_type) {
                  cell_str = cell_str + '(';
                  if (row.remote_id) {
                    cell_str = cell_str + ' id: ' + he.encode(row.remote_id);
                  }
                  else if (row.remote_type) {
                    cell_str = cell_str + ' type: ' + he.encode(row.remote_type);
                  }
                  cell_str = cell_str + ' )<br/>';
                }
                [% END %]
              }
              else {
                cell_str = cell_str + '<i class="icon-unlink text-error"></i>&nbsp; (possible uplink)';
              }
            }
            [% IF params.c_nodes %]
            var macfmt = '[% params.mac_format %]';
            for (index = 0; index < row.nodes.length; ++index) {
              if ((row.remote_ip || row.is_uplink) && index === 0 ) {
                cell_str = cell_str + '<br/>';
              }
              if (row.nodes[index].active === 0) {
                [% IF params.n_archived %]
                cell_str = cell_str + '<br/>';
                cell_str = cell_str + '<i class="icon-book"></i>&nbsp; ';
                [% ELSE %]
                continue;
                [% END %]
              }
              else if (index !== 0) {
                cell_str = cell_str + '<br/>';
              }
              if (row.remote_type && row.remote_type.match(/ip.phone/i)) {
                cell_str = cell_str + '<i class="icon-phone"></i>&nbsp;';
              }
              else if (row.nodes[index].ssids || (row.remote_type && row.remote_type.match(/(cisco\s+AIR-[L|c]?AP|-K9W8-|^AP:\s)/))) {
                cell_str = cell_str + '<i class="icon-signal"></i>&nbsp;';
              }
              cell_str = cell_str + '<a href="[% search_node %]&q=';
              var fmac = formatMacAddress(row.nodes[index].mac, macfmt);
              cell_str = cell_str + encodeURIComponent(fmac) + '">';
              cell_str = cell_str + he.encode(fmac) + '</a>';
              if (row.nodes[index].vlans.length > 0) {
                var vl = row.nodes[index].vlans ? row.nodes[index].vlans.join(", ") : "";
                cell_str = cell_str + ' (on vlan ';
                cell_str = cell_str + vl + ')';
              }
              [% IF params.n_ssid %]
              if (row.nodes[index].ssids && row.nodes[index].ssids.length > 0) {
                var arr = row.nodes[index].ssids;
                arr = arr.sort();
                arr = jQuery.map( arr, function( a ) {
                  return '<a href="[% uri_for('/report/portssid') %]?ssid=' + encodeURIComponent(a) + '">' + he.encode(a) + '</a>';
                });
                cell_str = cell_str + ' (SSID: ';
                cell_str = cell_str + arr.join(" ");
                cell_str = cell_str + ')';
              }
              [% END %]
              [% IF params.n_vendor %]
              if (row.nodes[index].abbrev) {
                cell_str = cell_str + '(Vendor: ';
                cell_str = cell_str + '<a href="[%+ uri_for('/report/nodevendor') %]?vendor=';
                cell_str = cell_str + encodeURIComponent(row.nodes[index].abbrev) + '">';
                cell_str = cell_str + he.encode(row.nodes[index].abbrev || '') + '</a>';
                cell_str = cell_str + ')';
              }
              [% END %]
              [% IF params.n_age %]
                cell_str = cell_str + ' ( ';
                var now = moment();
                var t_last = moment(row.nodes[index].time_last);
                cell_str = cell_str + t_last.from(now);
                cell_str = cell_str + ' )';
              [% END %]
              [% IF params.n_ip %]
              if (row.nodes[index].ip && row.nodes[index].ip.length > 0) {              
                for (idx = 0; idx < row.nodes[index].ip.length; ++idx) {
                  if (row.nodes[index].ip_active[idx] === 0) {
                    [% IF params.n_archived %]
                    cell_str = cell_str + '<br/>&nbsp;';
                    cell_str = cell_str + '<i class="icon-book"></i>&nbsp; ';
                    [% ELSE %]
                    continue;
                    [% END %]
                  }
                  else {
                    cell_str = cell_str + '<br/>&nbsp;';
                  }
                  cell_str = cell_str + '<a href="[% search_node %]&q=';
                  cell_str = cell_str + encodeURIComponent(row.nodes[index].ip[idx]) + '">';
                  if (row.nodes[index].dns[idx]) {
                    cell_str = cell_str + he.encode(row.nodes[index].dns[idx]);
                    cell_str = cell_str + ' ( ' + he.encode(row.nodes[index].ip[idx]) + ' )</a>';
                  }
                  else {
                    cell_str = cell_str + he.encode(row.nodes[index].ip[idx]) + '</a>';
                  }
                }
              }
              [% END %]
              [% IF params.n_netbios %]
              if (row.nodes[index].nbname) {
                cell_str = cell_str + '<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\\<a href="[% uri_for('/report/netbios') %]?domain=';
                var nb_dom_uri = row.nodes[index].nbname ? encodeURIComponent(row.nodes[index].domain) : 'blank';
                var nb_dom = row.nodes[index].nbname ? he.encode(row.nodes[index].domain) : '(Blank Domain)';
                cell_str = cell_str + nb_dom_uri + '" title="Nodes in this Domain">' + nb_dom + '</a>\\';
                cell_str = cell_str + '<a href="[% search_node %]&q=' + encodeURIComponent(row.nodes[index].nbname) + '">';
                cell_str = cell_str + he.encode(row.nodes[index].nbname) + '</a>';
                cell_str = cell_str + '<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
                var nb_user = row.nodes[index].nbuser ? he.encode(row.nodes[index].nbuser) : '[No User]';
                cell_str = cell_str + nb_user + '@';
                cell_str = cell_str + '<a href="[% search_node %]&q=';
                cell_str = cell_str + encodeURIComponent(row.nodes[index].nb_ip) + '">';
                cell_str = cell_str + he.encode(row.nodes[index].nb_ip) + '</a>';
              }
              [% END %]
            }
            [% END %]
            return cell_str;
        }
      }, {
        "title": 'Spanning Tree',
        "name": 'c_stp',
        "visible": false,
        "data": "stp",
        "render": function(data, type, row, meta) {
          return type === 'display' ? he.encode(data || '') : data;
        }
      }, {
        "title": 'Status',
        "name": 'c_up',
        "visible": false,
        "data": "up",
      }
    ],
    "data": [% results %]
  });
});
</script>
